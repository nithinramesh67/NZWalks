// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalksDBContext))]
    [Migration("20250225091034_adding images table")]
    partial class addingimagestable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4300c759-736a-403f-8aaf-8d606378ffd2"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("af9199b8-5a57-4138-ba86-c3204bb75bcc"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("4bd8fc8b-7982-4bcb-a3ea-4708967f8b06"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4d3a610-b010-459e-87ed-84c65d35d15a"),
                            Code = "AUK",
                            Name = "Auckland",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/3/3b/Auckland_City_Skyline.jpg"
                        },
                        new
                        {
                            Id = new Guid("5c61e9de-85f4-48aa-b9ea-be0603f91f8d"),
                            Code = "WEL",
                            Name = "Wellington",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/3/3e/Wellington_City_Skyline.jpg"
                        },
                        new
                        {
                            Id = new Guid("35ac7d7d-0978-4495-93b8-469a2d240e37"),
                            Code = "CHR",
                            Name = "Christchurch",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/8/8e/Christchurch_Cathedral.jpg"
                        },
                        new
                        {
                            Id = new Guid("901035d4-dd1d-4fa3-a0fc-9db3c41713b5"),
                            Code = "HAM",
                            Name = "Hamilton",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/4/4f/Hamilton_Gardens.jpg"
                        },
                        new
                        {
                            Id = new Guid("cd1ee686-1d2b-43b1-9ded-bdaa13f9692a"),
                            Code = "TAU",
                            Name = "Tauranga",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/2/2c/Tauranga_Bay.jpg"
                        },
                        new
                        {
                            Id = new Guid("51a9170f-eb58-45d7-913f-377c980825d2"),
                            Code = "DUN",
                            Name = "Dunedin",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/5/5c/Dunedin_City.jpg"
                        },
                        new
                        {
                            Id = new Guid("0ac86219-a84c-4fce-b0c1-db0b14e3c9ac"),
                            Code = "NAP",
                            Name = "Napier-Hastings",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/4/4b/Napier_Hastings.jpg"
                        },
                        new
                        {
                            Id = new Guid("b2bac570-237b-473c-9edf-f40533ac4dba"),
                            Code = "PAL",
                            Name = "Palmerston North",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/7/7e/Palmerston_North_City.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
